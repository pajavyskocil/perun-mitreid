<?xml version="1.0" encoding="UTF-8"?>
<!--
 Replaces (overlays) the same-name file from project org.server.openid-connect-server-webapp.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		">

	<context:property-placeholder properties-ref="coreProperties"/>
	<context:component-scan base-package="cz.muni.ics.oidc"/>

	<!-- default config values, by default override in file /etc/perun/perun-mitreid.properties -->
	<bean id="defaultCoreProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="main.oidc.issuer.url">https://perun-dev.meta.zcu.cz/oidc/</prop>
				<prop key="logo.image.url">resources/images/perun_24px.png</prop>
				<prop key="topbar.title">Perun OIDC</prop>
				<prop key="proxy.extSource.name"/>
				<prop key="proxy.base.url"/>
				<prop key="proxy.login.url"/>
				<prop key="proxy.logout.url"/>
				<prop key="perun.rpc.url">https://perun.elixir-czech.cz/krb/rpc</prop>
				<prop key="perun.rpc.user">xxxxx</prop>
				<prop key="perun.rpc.password">yyyyy</prop>
				<prop key="ldap.host">perun.cesnet.cz</prop>
				<prop key="ldap.user">xxxxx</prop>
				<prop key="ldap.password">yyyyyyy</prop>
				<prop key="ldap.timeoutSecs">120</prop>
				<prop key="ldap.baseDN">dc=perun,dc=cesnet,dc=cz</prop>
				<prop key="jdbc.driver">org.mariadb.jdbc.Driver</prop>
				<prop key="jdbc.url">jdbc:mariadb://localhost:3306/oidc</prop>
				<prop key="jdbc.user">oidc</prop>
				<prop key="jdbc.password">oidc</prop>
				<prop key="jdbc.platform">org.eclipse.persistence.platform.database.MySQLPlatform</prop>
				<prop key="stats.jdbc.url">jdbc:mariadb://localhost:3306/STATS</prop>
				<prop key="stats.jdbc.user">user</prop>
				<prop key="stats.jdbc.password">password</prop>
				<prop key="jwk">file:///etc/perun/perun-oidc-keystore.jwks</prop>
				<prop key="admins">3197,59835</prop>
				<prop key="accessTokenClaimsModifier">cz.muni.ics.oidc.server.PerunAccessTokenEnhancer.NoOpAccessTokenClaimsModifier</prop>
				<prop key="web.theme">default</prop>
				<prop key="web.langs">EN</prop> <!-- EN,CS,SK -->
				<prop key="web.langs.customfiles.path">/etc/perun</prop>
				<prop key="web.classes.path">/etc/perun/web/classes.properties</prop>
				<prop key="web.baseURL">https://login.cesnet.cz/proxy</prop>
				<prop key="idpFilters.askPerun.enabled">false</prop>
				<prop key="registrar.url">https://perun-dev.cesnet.cz/allfed/registrar/</prop>
				<prop key="id_token.scopes">openid,profile,email,phone,address</prop>
				<prop key="facility.attrs.checkGroupMembership">urn:perun:facility:attribute-def:def:OIDCCheckGroupMembership</prop>
				<prop key="facility.attrs.allowRegistration">urn:perun:facility:attribute-def:def:allowRegistration</prop>
				<prop key="facility.attrs.registrationURL">urn:perun:facility:attribute-def:def:registrationURL</prop>
				<prop key="facility.attrs.dynamicRegistration">urn:perun:facility:attribute-def:def:dynamicRegistration</prop>
				<prop key="facility.attrs.voShortNames">urn:perun:facility:attribute-def:virt:voShortNames</prop>
				<prop key="facility.attrs.clientId">urn:perun:facility:attribute-def:def:OIDCClientID</prop>
				<prop key="facility.attrs.wayfFilter">urn:perun:facility:attribute-def:def:wayfFilter</prop>
				<prop key="facility.attrs.wayfEFilter">urn:perun:facility:attribute-def:def:wayfEFilter</prop>

				<!-- for LDAP
				<prop key="attribute.openid.sub">login;x-ns-einfraid-persistent-shadow</prop>
				<prop key="attribute.profile.preferred_username">login;x-ns-einfra</prop>
				<prop key="attribute.profile.given_name">givenName</prop>
				<prop key="attribute.profile.middle_name">middleName</prop>
				<prop key="attribute.profile.family_name">sn</prop>
				<prop key="attribute.profile.name">cn</prop>
				<prop key="attribute.profile.zoneinfo">timezone</prop>
				<prop key="attribute.profile.locale">preferredLanguage</prop>
				<prop key="attribute.email.email">preferredMail</prop>
				<prop key="attribute.phone.phone">telephoneNumber</prop>
				<prop key="attribute.address.address.formatted">postalAddress</prop>
				<prop key="custom.claims">organization,eppns</prop>
				<prop key="custom.claim.organization.scope">organization</prop>
				<prop key="custom.claim.organization.attribute">o</prop>
				<prop key="custom.claim.eppns.scope">eppns</prop>
				<prop key="custom.claim.eppns.attribute">eduPersonPrincipalNames</prop>
				-->
				<!-- for RPC -->
				<prop key="attribute.openid.sub">urn:perun:user:attribute-def:core:id</prop>
				<prop key="attribute.profile.preferred_username">urn:perun:user:attribute-def:def:login-namespace:einfra</prop>
				<prop key="attribute.profile.given_name">urn:perun:user:attribute-def:core:firstName</prop>
				<prop key="attribute.profile.middle_name">urn:perun:user:attribute-def:core:middleName</prop>
				<prop key="attribute.profile.family_name">urn:perun:user:attribute-def:core:lastName</prop>
				<prop key="attribute.profile.name">urn:perun:user:attribute-def:core:displayName</prop>
				<prop key="attribute.profile.zoneinfo">urn:perun:user:attribute-def:def:timezone</prop>
				<prop key="attribute.profile.locale">urn:perun:user:attribute-def:def:preferredLanguage</prop>
				<prop key="attribute.email.email">urn:perun:user:attribute-def:def:preferredMail</prop>
				<prop key="attribute.phone.phone">urn:perun:user:attribute-def:def:phone</prop>
				<prop key="attribute.address.address.formatted">urn:perun:user:attribute-def:def:address</prop>
				<prop key="custom.claims">organization,eppns</prop>
				<prop key="custom.claim.organization.scope">organization</prop>
				<prop key="custom.claim.organization.attribute">urn:perun:user:attribute-def:def:organization</prop>
				<prop key="custom.claim.eppns.scope">eppns</prop>
				<prop key="custom.claim.eppns.attribute">urn:perun:user:attribute-def:virt:eduPersonPrincipalNames</prop>
				<!-- USERINFO -->
				<prop key="userInfo.modifiers"/>
				<!-- REQUEST FILTERS -->
				<prop key="filter.names">stats</prop>
				<prop key="filter.stats.class">cz.muni.ics.oidc.server.filters.impl.ProxyStatisticsFilter</prop>
				<prop key="filter.stats.idpNameAttributeName">sourceIdPName</prop>
				<prop key="filter.stats.idpEntityIdAttributeName">sourceIdPEntityID</prop>
				<prop key="filter.stats.statisticsTableName">statistics_per_user</prop>
				<prop key="filter.stats.identityProvidersMapTableName">statistics_idp</prop>
				<prop key="filter.stats.serviceProvidersMapTableName">statistics_sp</prop>
			</props>
		</property>
	</bean>
	<bean id="coreProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties" ref="defaultCoreProperties"/>
		<property name="locations">
			<list>
				<!-- PASSED FROM POM.XML / MAVEN BUILD PROPS -->
				<value>file://${config.location}</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false"/>
	</bean>

	<!-- defines our own user info service -->
	<bean id="userInfoService" primary="true" class="cz.muni.ics.oidc.server.userInfo.PerunUserInfoService">
		<property name="perunConnector" ref="perunConnector"/>
		<property name="subAttribute" value="${attribute.openid.sub}"/>
		<property name="preferredUsernameAttribute" value="${attribute.profile.preferred_username}"/>
		<property name="givenNameAttribute" value="${attribute.profile.given_name}"/>
		<property name="familyNameAttribute" value="${attribute.profile.family_name}"/>
		<property name="middleNameAttribute" value="${attribute.profile.middle_name}"/>
		<property name="fullNameAttribute" value="${attribute.profile.name}"/>
		<property name="emailAttribute" value="${attribute.email.email}"/>
		<property name="addressAttribute" value="${attribute.address.address.formatted}"/>
		<property name="phoneAttribute" value="${attribute.phone.phone}"/>
		<property name="zoneinfoAttribute" value="${attribute.profile.zoneinfo}"/>
		<property name="localeAttribute" value="${attribute.profile.locale}"/>
		<property name="properties" ref="coreProperties"/>
		<property name="customClaimNames" value="#{'${custom.claims}'.split('\s*,\s*')}"/>
	</bean>

	<!-- replaces default translation service with our own for custom scope with custom claims. -->
	<bean id="scopeClaimTranslator" primary="true" class="cz.muni.ics.oidc.server.PerunScopeClaimTranslationService">
		<property name="perunUserInfoService" ref="userInfoService"/>
	</bean>

	<bean id="introspectionResultAssembler" class="cz.muni.ics.oidc.server.PerunIntrospectionResultAssembler" primary="true">
		<constructor-arg name="configBean" ref="configBean"/>
		<constructor-arg name="translator" ref="scopeClaimTranslator"/>
	</bean>

	<bean id="perunOidcConfig" class="cz.muni.ics.oidc.server.configurations.PerunOidcConfig">
		<property name="rpcUrl" value="${perun.rpc.url}"/>
		<property name="configBean" ref="configBean"/>
		<property name="jwk" value="${jwk}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="theme" value="${web.theme}"/>
		<property name="samlLoginURL" value="${proxy.login.url}"/>
		<property name="samlLogoutURL" value="${proxy.logout.url}"/>
		<property name="samlResourcesURL" value="${proxy.base.url}"/>
		<property name="baseURL" value="${web.baseURL}"/>
		<property name="registrarUrl" value="${registrar.url}"/>
		<property name="askPerunForIdpFiltersEnabled" value="${idpFilters.askPerun.enabled}"/>
		<property name="proxyExtSourceName" value="${proxy.extSource.name}"/>
		<property name="idTokenScopes" value="#{'${id_token.scopes}'.split('\s*,\s*')}"/>
		<property name="availableLangs" value="#{'${web.langs}'.split('\s*,\s*')}"/>
		<property name="localizationFilesPath" value="${web.langs.customfiles.path}"/>
		<property name="webClassesFilePath" value="${web.classes.path}"/>
	</bean>

	<bean id="facilityAttrsConfig" class="cz.muni.ics.oidc.server.configurations.FacilityAttrsConfig">
		<property name="checkGroupMembershipAttr" value="${facility.attrs.checkGroupMembership}" />
		<property name="allowRegistrationAttr" value="${facility.attrs.allowRegistration}" />
		<property name="registrationURLAttr" value="${facility.attrs.registrationURL}" />
		<property name="dynamicRegistrationAttr" value="${facility.attrs.dynamicRegistration}" />
		<property name="voShortNamesAttr" value="${facility.attrs.voShortNames}" />
		<property name="wayfFilterAttr" value="${facility.attrs.wayfFilter}" />
		<property name="wayfEFilterAttr" value="${facility.attrs.wayfEFilter}" />
	</bean>
	<!-- authentication -->

	<!--suppress SpringXmlModelInspection -->
	<security:http auto-config="false" use-expressions="true" entry-point-ref="http403EntryPoint"
	               authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/authorize" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:custom-filter ref="perunAuthenticationFilter" after="PRE_AUTH_FILTER"/>
		<security:custom-filter ref="callPerunFiltersFilter" after="BASIC_AUTH_FILTER"/>
	</security:http>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider ref="preauthAuthProvider"/>
	</security:authentication-manager>

	<!-- the user must be pre-authenticated by Apache -->
	<bean id="preauthAuthProvider"
	      class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService" ref="userDetailsService"/>
	</bean>


	<bean id="perunTimeStamper" class="cz.muni.ics.oidc.server.PerunAuthenticationSuccessHandler">
	</bean>

	<bean id="accessTokenClaimsModifier" class="${accessTokenClaimsModifier}">
	</bean>

	<bean id="tokenEnhancer" class="cz.muni.ics.oidc.server.PerunAccessTokenEnhancer" primary="true">
		<property name="accessTokenClaimsModifier" ref="accessTokenClaimsModifier"/>
	</bean>
	<bean id="oidcTokenService" class="cz.muni.ics.oidc.server.PerunOIDCTokenService" primary="true">
	</bean>

	<!-- extracts user from HTTP request and looks it up in Perun-->
	<bean id="perunAuthenticationFilter" class="cz.muni.ics.oidc.server.filters.PerunAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="authenticationSuccessHandler" ref="perunTimeStamper"/>
	</bean>
	<!-- -->

	<bean id="callPerunFiltersFilter" class="cz.muni.ics.oidc.server.filters.CallPerunFiltersFilter"/>

	<!-- decides who is admin -->
	<bean id="userDetailsService" class="cz.muni.ics.oidc.server.PerunAuthenticationUserDetailsService">
		<property name="perunConnector" ref="perunConnector"/>
		<property name="admins" value="#{'${admins}'.split('\s*,\s*')}"/>
	</bean>

	<bean id="localization" class="cz.muni.ics.oidc.web.langs.Localization">
		<constructor-arg name="perunOidcConfig" ref="perunOidcConfig"/>
	</bean>

	<bean id="htmlClasses" class="cz.muni.ics.oidc.web.WebHtmlClasses">
		<constructor-arg name="perunOidcConfig" ref="perunOidcConfig"/>
	</bean>

	<!-- communicates with Perun -->
	<bean id="perunConnector" class="cz.muni.ics.oidc.server.connectors.impl.PerunConnectorRpc">
		<property name="perunUrl" value="${perun.rpc.url}"/>
		<property name="perunUser" value="${perun.rpc.user}"/>
		<property name="perunPassword" value="${perun.rpc.password}"/>
		<property name="oidcClientIdAttr" value="${facility.attrs.clientId}" />
		<property name="oidcCheckMembershipAttr" value="${facility.attrs.checkGroupMembership}"/>
	</bean>

	<!--
	<bean id="perunConnectorLdap" class="cz.muni.ics.oidc.serverr.connectors.impl.PerunConnectorLdap">
		<constructor-arg name="ldapHost" value="${ldap.host}"/>
		<constructor-arg name="ldapUser" value="${ldap.user}"/>
		<constructor-arg name="ldapPassword" value="${ldap.password}"/>
		<constructor-arg name="timeoutSecs" value="${ldap.timeoutSecs}"/>
		<constructor-arg name="baseDN" value="${ldap.baseDN}"/>
		<property name="fallbackConnector" ref="perunConnector"/>
	</bean>
	-->
</beans>
